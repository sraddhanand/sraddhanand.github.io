"use strict";(self.webpackChunksraddhanand=self.webpackChunksraddhanand||[]).push([[638],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return f}});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=a.createContext({}),p=function(e){var t=a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},u=function(e){var t=p(e.components);return a.createElement(c.Provider,{value:t},e.children)},i={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=p(r),f=n,d=m["".concat(c,".").concat(f)]||m[f]||i[f]||o;return r?a.createElement(d,l(l({ref:t},u),{},{components:r})):a.createElement(d,l({ref:t},u))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,l=new Array(o);l[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:n,l[1]=s;for(var p=2;p<o;p++)l[p]=r[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},3097:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return c},default:function(){return f},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return i}});var a=r(7462),n=r(3366),o=(r(7294),r(3905)),l=["components"],s={id:"terraform-cheat-sheet",title:"Terraform CLI Cheat sheet",sidebar_label:"CLI Cheat sheet"},c=void 0,p={unversionedId:"terraform/terraform-cheat-sheet",id:"terraform/terraform-cheat-sheet",title:"Terraform CLI Cheat sheet",description:"Fetches the current state of the resources and updates the state file.",source:"@site/docs/terraform/cheat-sheet.md",sourceDirName:"terraform",slug:"/terraform/terraform-cheat-sheet",permalink:"/docs/terraform/terraform-cheat-sheet",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/terraform/cheat-sheet.md",tags:[],version:"current",frontMatter:{id:"terraform-cheat-sheet",title:"Terraform CLI Cheat sheet",sidebar_label:"CLI Cheat sheet"},sidebar:"tutorialSidebar",previous:{title:"apply",permalink:"/docs/terraform/terraform-apply"},next:{title:"Expressions",permalink:"/docs/terraform/expressions"}},u={},i=[],m={toc:i};function f(e){var t=e.components,r=(0,n.Z)(e,l);return(0,o.kt)("wrapper",(0,a.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"terraform init\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"terraform init --backend\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"terraform fmt\nterraform validate\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"terraform graph > graph.dot\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"terraform refresh\n")),(0,o.kt)("p",null,"Fetches the current state of the resources and updates the state file."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"terraform plan\nterraform plan --out=file_obs_path\nterraform plan --refresh=false # will disable querying the current state during plan\nterraform plan --target=aws_instance.myec2 #only ec2 resourece named myec2 will be refreshed\n")),(0,o.kt)("p",null,"Generally displays what changes are going to take place to achieve the desired state."),(0,o.kt)("p",null,"Apply the desired state from the module."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"terraform apply\n")),(0,o.kt)("p",null,"Apply the desired state from plan output."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"terraform apply file_obs_path\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"terraform import\n")),(0,o.kt)("p",null,"Reads the state file and displays ",(0,o.kt)("code",null,"output_variable_name")," value"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"terraform output output_variable_name\n")),(0,o.kt)("p",null,"Get the list of resources created and stored in statefile"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"terraform state list\n")),(0,o.kt)("p",null,"Move resource name within a state."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"terraform state mv aws_vpc.this aws_vpc.eks_vpc\n")))}f.isMDXComponent=!0}}]);