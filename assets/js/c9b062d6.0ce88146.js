"use strict";(self.webpackChunksraddhanand=self.webpackChunksraddhanand||[]).push([[8129],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var r=n(7294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var o=r.createContext({}),c=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(o.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,s=e.mdxType,a=e.originalType,o=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=c(n),d=s,h=m["".concat(o,".").concat(d)]||m[d]||p[d]||a;return n?r.createElement(h,l(l({ref:t},u),{},{components:n})):r.createElement(h,l({ref:t},u))}));function d(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var a=n.length,l=new Array(a);l[0]=m;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i.mdxType="string"==typeof e?e:s,l[1]=i;for(var c=2;c<a;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4575:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return o},default:function(){return d},frontMatter:function(){return i},metadata:function(){return c},toc:function(){return p}});var r=n(7462),s=n(3366),a=(n(7294),n(3905)),l=["components"],i={id:"helm-secrets",title:"Helm secrets plugin"},o=void 0,c={unversionedId:"kubernetes/helm-secrets",id:"kubernetes/helm-secrets",title:"Helm secrets plugin",description:"Challanges",source:"@site/docs/kubernetes/helm-secrets.md",sourceDirName:"kubernetes",slug:"/kubernetes/helm-secrets",permalink:"/docs/kubernetes/helm-secrets",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/kubernetes/helm-secrets.md",tags:[],version:"current",frontMatter:{id:"helm-secrets",title:"Helm secrets plugin"},sidebar:"tutorialSidebar",previous:{title:"fastAPI_EKS",permalink:"/docs/kubernetes/fastAPI_EKS"},next:{title:"Kubernetes Operations (KOPS)",permalink:"/docs/kubernetes/kops"}},u={},p=[{value:"Challanges",id:"challanges",level:2},{value:"Steps to use",id:"steps-to-use",level:2},{value:"Installation",id:"installation",level:3},{value:"Use",id:"use",level:3}],m={toc:p};function d(e){var t=e.components,n=(0,s.Z)(e,l);return(0,a.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"challanges"},"Challanges"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"When you have the need to store kubernetes secrets as part of helm chart in code repository, it does not make sense to encrypt using ",(0,a.kt)("inlineCode",{parentName:"li"},"base64"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"base64 -d")," can decrypt the secret and results out the plain test password/sensitive strings"),(0,a.kt)("li",{parentName:"ul"},"Using ",(0,a.kt)("inlineCode",{parentName:"li"},"helm-secret"),", you can encrypt the secret strings using the keys and check-in as part of helm chart"),(0,a.kt)("li",{parentName:"ul"},"During the ",(0,a.kt)("inlineCode",{parentName:"li"},"helm install")," helm secret plugin will decrypt using the encryption key and applies to the K8S cluster"),(0,a.kt)("li",{parentName:"ul"},"Ref: ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/jkroepke/helm-secrets"},"github repo"))),(0,a.kt)("h2",{id:"steps-to-use"},"Steps to use"),(0,a.kt)("h3",{id:"installation"},"Installation"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"helm plugin install https://github.com/jkroepke/helm-secrets  \nhelm secrets help # validate the installation\n")),(0,a.kt)("h3",{id:"use"},"Use"),(0,a.kt)("p",null,"gpg --list-keys\ngpg --gen-key"),(0,a.kt)("p",null,"sops -p (key) secrets.yaml"),(0,a.kt)("p",null,'2:52 gpg --list-keys\n3:01\n4:11 helm secrets view secrets.yaml\n4:49 helm create app\n5:12 secrets.yaml helm template\n5:50 create env for k8s pod\n6:09 helm secrets install app ./app -n default -f ./secrets.yaml\n6:45 helm ls\n6:53 kubectl get secrets credentials -o yaml\n7:14 echo "" | base64 -d\n7:26 kubectl exec (pod) -- printenv'))}d.isMDXComponent=!0}}]);