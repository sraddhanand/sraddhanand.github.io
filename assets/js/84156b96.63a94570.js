"use strict";(self.webpackChunksraddhanand=self.webpackChunksraddhanand||[]).push([[162],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return f}});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),u=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=u(r),f=n,m=d["".concat(s,".").concat(f)]||d[f]||p[f]||l;return r?a.createElement(m,o(o({ref:t},c),{},{components:r})):a.createElement(m,o({ref:t},c))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,o=new Array(l);o[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:n,o[1]=i;for(var u=2;u<l;u++)o[u]=r[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},539:function(e,t,r){r.r(t),r.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return f},frontMatter:function(){return i},metadata:function(){return u},toc:function(){return p}});var a=r(7462),n=r(3366),l=(r(7294),r(3905)),o=["components"],i={id:"syntax",title:"Files & Components",sidebar_label:"Files & Components"},s=void 0,u={unversionedId:"terraform/syntax",id:"terraform/syntax",title:"Files & Components",description:"Terraform does not have a specified directory structure as found in Chef or Ansible. But terraform follows different file extentions for the need.",source:"@site/docs/terraform/syntax.md",sourceDirName:"terraform",slug:"/terraform/syntax",permalink:"/docs/terraform/syntax",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/terraform/syntax.md",tags:[],version:"current",frontMatter:{id:"syntax",title:"Files & Components",sidebar_label:"Files & Components"},sidebar:"tutorialSidebar",previous:{title:"State",permalink:"/docs/terraform/state"},next:{title:"validate",permalink:"/docs/terraform/terraform-validate"}},c={},p=[{value:"Files",id:"files",level:2},{value:".tf",id:"tf",level:3},{value:".tfvars",id:"tfvars",level:3},{value:".tfstate",id:"tfstate",level:3},{value:"Components",id:"components",level:2},{value:"Resources",id:"resources",level:3},{value:"Data:",id:"data",level:3},{value:"Providers",id:"providers",level:3},{value:"Variables",id:"variables",level:3},{value:"Output",id:"output",level:3},{value:"Modules",id:"modules",level:3},{value:"Functions",id:"functions",level:3}],d={toc:p};function f(e){var t=e.components,r=(0,n.Z)(e,o);return(0,l.kt)("wrapper",(0,a.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Terraform does not have a specified directory structure as found in Chef or Ansible. But terraform follows different file extentions for the need. ",(0,l.kt)("br",null),"\nTerraform reads all ",(0,l.kt)("code",null,".tf")," files and apply them. "),(0,l.kt)("h2",{id:"files"},"Files"),(0,l.kt)("h3",{id:"tf"},".tf"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"All terraform configurations are writen in ",(0,l.kt)("code",null,".tf")," files. "),(0,l.kt)("li",{parentName:"ul"},"We can write one file with all required configurations or we can split the same configuration into multiple *.tf files for the ease of use.")),(0,l.kt)("h3",{id:"tfvars"},".tfvars"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Declaring terraform variables with default values should be handled in .tf files"),(0,l.kt)("li",{parentName:"ul"},"However multiple ",(0,l.kt)("code",null,".tfvars")," files can be maintained for different environments or application."),(0,l.kt)("li",{parentName:"ul"},"These .tfvars file can be passed to plan & apply commands to overwrite the default values.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"terraform plan --var-file ./dev.tfvars\nterraform apply --var-file ./dev.tfvars\n")),(0,l.kt)("h3",{id:"tfstate"},".tfstate"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"It stores the result of apply or current state from the terraform configuration"),(0,l.kt)("li",{parentName:"ul"},"It follows json syntax"),(0,l.kt)("li",{parentName:"ul"},"We can use ",(0,l.kt)("code",null,"backend")," configuration and specify the location to store"),(0,l.kt)("li",{parentName:"ul"},"If ",(0,l.kt)("code",null,"backend")," is not specified ",(0,l.kt)("code",null,"terraform.tfstate")," file will be generated in the current directory")),(0,l.kt)("h2",{id:"components"},"Components"),(0,l.kt)("h3",{id:"resources"},"Resources"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"resource")," creates the resource with the confuguration mentioned against it's attributes")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-hcl"},'resource "aws_instance" "web" {\n  ami           = "ami-408c7f28"\n  instance_type = "t1.micro"\n}\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"To get the complete list of attribute for each ",(0,l.kt)("code",null,"resource"),", please visit terraform official document.")),(0,l.kt)("h3",{id:"data"},"Data:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"data")," source allows a Terraform configuration to build on information defined outside of Terraform.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-hcl"},'data "aws_ami" "web" {\n  filter {\n    name   = "state"\n    values = ["available"]\n  }\n\n  filter {\n    name   = "tag:Component"\n    values = ["web"]\n  }\n\n  most_recent = true\n}\n\nresource "aws_instance" "web" {\n  ami           = "${data.aws_ami.web.id}"\n  instance_type = "t1.micro"\n}\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"To get the complete list of attributes for each ",(0,l.kt)("code",null,"data")," source, please visit terraform official document.")),(0,l.kt)("h3",{id:"providers"},"Providers"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Providers are responsible in Terraform for managing the lifecycle of a resource: create, read, update, delete."),(0,l.kt)("li",{parentName:"ul"},"Most providers require some sort of configuration to provide authentication information, endpoint URLs, etc. ")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-hcl"},'provider "aws" {\n  access_key = "foo"\n  secret_key = "bar"\n  region     = "us-east-1"\n}\n')),(0,l.kt)("h3",{id:"variables"},"Variables"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Input variables are parameters for the terraform configuration"),(0,l.kt)("li",{parentName:"ul"},"variable type can be ",(0,l.kt)("code",null,"string"),", ",(0,l.kt)("code",null,"list"),", ",(0,l.kt)("code",null,"map")),(0,l.kt)("li",{parentName:"ul"},"If type is not specified, type will be inferred from ",(0,l.kt)("code",null,"default"),(0,l.kt)("div",{parentName:"li",className:"admonition admonition-tip alert alert--success"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"If the default value is not specified and terraform plan/apply ran without --var-file flag, terraform will prompts for the user to key in the value. This practise may lead to errors during CI/CD. It is good practise to specify the default value.")))),(0,l.kt)("li",{parentName:"ul"},"We can use ",(0,l.kt)("code",null,"TF",(0,l.kt)("em",{parentName:"li"},"VAR"))," as a pre-fix for the variables and use environment variable.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"export  TF_VAR_instance_type=t2.micro\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-hcl"},'variable "instance_type" {\n    type = "string"\n}\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,".tfvars")," files store values of input variables")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-hcl"},"instance_type=t2.micro\nfoo=bar\n")),(0,l.kt)("h3",{id:"output"},"Output"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Output values are like ",(0,l.kt)("code",null,"return")," or ",(0,l.kt)("code",null,"print")," statements. "),(0,l.kt)("li",{parentName:"ul"},"While using ",(0,l.kt)("code",null,"output")," in child modules, it works like ",(0,l.kt)("code",null,"return")," so that these output values can be used else where in the main module/terraform configuration.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-hcl"},'output "instance_id" {\n  value = aws_instance.web.id\n}\n')),(0,l.kt)("h3",{id:"modules"},"Modules"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Similar to Classes in other programming language, modules help in offloading standard configuration. "),(0,l.kt)("li",{parentName:"ul"},"In Terraform, every directory which consists of .tf files is a module."),(0,l.kt)("li",{parentName:"ul"},"Modules can be import from local filesystem or from a public or private registry. "),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"source")," atrribute consist of paths, addresses, and URIs which represent the local/public/private module.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-hcl"},'module "ec2-instance" {\n  source  = "terraform-aws-modules/ec2-instance/aws" \n  version = "2.17.0"\n  name                   = "my-cluster"\n  instance_count         = 5\n}\n')),(0,l.kt)("h3",{id:"functions"},"Functions"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Similar to any programming language terraform provide ",(0,l.kt)("a",{parentName:"li",href:"https://www.terraform.io/docs/language/functions/index.html"},"built-in functions"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-hcl"},'output "combinied" {\n    value = zipmap(aws_iam_user.lb[*].name, aws_iam_user.lb[*].arn)\n}\n')))}f.isMDXComponent=!0}}]);