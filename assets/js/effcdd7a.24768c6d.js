"use strict";(self.webpackChunksraddhanand=self.webpackChunksraddhanand||[]).push([[462],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return d}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),u=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},c=function(e){var n=u(e.components);return r.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=u(t),d=a,f=m["".concat(l,".").concat(d)]||m[d]||p[d]||o;return t?r.createElement(f,s(s({ref:n},c),{},{components:t})):r.createElement(f,s({ref:n},c))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,s=new Array(o);s[0]=m;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var u=2;u<o;u++)s[u]=t[u];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},165:function(e,n,t){t.r(n),t.d(n,{assets:function(){return c},contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return i},metadata:function(){return u},toc:function(){return p}});var r=t(7462),a=t(3366),o=(t(7294),t(3905)),s=["components"],i={id:"expressions",title:"Expressions",sidebar_label:"Expressions"},l=void 0,u={unversionedId:"terraform/expressions",id:"terraform/expressions",title:"Expressions",description:"Element in list & map",source:"@site/docs/terraform/expressions.md",sourceDirName:"terraform",slug:"/terraform/expressions",permalink:"/docs/terraform/expressions",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/terraform/expressions.md",tags:[],version:"current",frontMatter:{id:"expressions",title:"Expressions",sidebar_label:"Expressions"},sidebar:"tutorialSidebar",previous:{title:"CLI Cheat sheet",permalink:"/docs/terraform/terraform-cheat-sheet"},next:{title:"plan",permalink:"/docs/terraform/terraform-plan"}},c={},p=[{value:"Element in list &amp; map",id:"element-in-list--map",level:3},{value:"Count &amp; index",id:"count--index",level:3},{value:"Conditional Expression",id:"conditional-expression",level:3}],m={toc:p};function d(e){var n=e.components,t=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h3",{id:"element-in-list--map"},"Element in list & map"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-terraform"},'variable "ami_id" {\n    type = map\n    default = {\n        "us-east-1" = "ami-1w2e3f5d3w",\n        "us-east-2" = "ami-375wer34f3",\n        "us-west-1" = "ami-asdf23r2a3",\n    }\n}\n\nvariable "subnets" {\n    type = list\n    default = ["subnet-23e12371", "subnet-adfa1e171", "subnet-9876hsei"]\n}\n\nvariable "security_groups" {\n    type = list\n    default = ["sg-23e12371", "sg-7dsf73jd"]\n}\n\nresource "aws_instance" "web" {\n  ami           = var.ami_id["us-east-1"] # select the value for the key = "us-east-1"\n  instance_type = "t3.micro"\n  subnet_id     = var.subnets[0]  # select the first element of the list \n  securoty_groups = var.security_groups # select the entire list\n  tags = {\n    Name = "HelloWorld"\n  }\n}\n')),(0,o.kt)("h3",{id:"count--index"},"Count & index"),(0,o.kt)("p",null,"Below block will 3 ec2 instances, each instance will be launched in each subnet. "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-terraform"},'resource "aws_instance" "web" {\n    subnet_id     = var.subnets[count.index]\n    count = 3\n    # ...\n}\n')),(0,o.kt)("h3",{id:"conditional-expression"},"Conditional Expression"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Syntax: ",(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-terraform"},"condition ? true_value : false_value\n"))),(0,o.kt)("li",{parentName:"ul"},"Below block will launch 3 instances in 'Production' environment and 1 instance in other environments.",(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-terraform"},'resource "aws_instance" "web" {\n    subnet_id     = var.subnets[count.index]\n    count = var.environment == \'Production\' ? 3 : 1\n    # ...\n}\n')))))}d.isMDXComponent=!0}}]);